swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: attendanceSheetController
    description: Attendance Sheet Controller
  - name: departmentController
    description: Department Controller
  - name: employeeController
    description: Employee Controller
  - name: positionController
    description: Position Controller
  - name: sickLeaveController
    description: Sick Leave Controller
  - name: vacationController
    description: Vacation Controller
paths:
  /attendance/new:
    post:
      tags:
        - attendanceSheetController
      summary: insert new attendance
      operationId: insertAttendance
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: attendanceSheetDto
          description: attendanceSheetDto
          required: true
          schema:
            $ref: '#/definitions/AttendanceSheetDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AttendanceSheetDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /attendance/update:
    put:
      tags:
        - attendanceSheetController
      summary: update attendance
      operationId: updateAttendance
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: attendanceSheetDto
          description: attendanceSheetDto
          required: true
          schema:
            $ref: '#/definitions/AttendanceSheetDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AttendanceSheetDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/attendance/emp/{employeeId}':
    get:
      tags:
        - attendanceSheetController
      summary: get attendance by employee id
      operationId: getAttendanceByEmployee
      produces:
        - '*/*'
      parameters:
        - name: employeeId
          in: path
          description: employeeId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AttendanceSheetDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/attendance/{attendanceId}':
    get:
      tags:
        - attendanceSheetController
      summary: get attendance by id
      operationId: getAttendance
      produces:
        - '*/*'
      parameters:
        - name: attendanceId
          in: path
          description: attendanceId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AttendanceSheetDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /dep/new:
    post:
      tags:
        - departmentController
      summary: insert new department
      operationId: insertDepartment
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: departmentDto
          description: departmentDto
          required: true
          schema:
            $ref: '#/definitions/DepartmentDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DepartmentDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /dep/total_hour:
    get:
      tags:
        - departmentController
      summary: get total work hours in department today
      operationId: getWorkHoursInDepartment
      produces:
        - '*/*'
      parameters:
        - name: departmentId
          in: query
          description: departmentId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /dep/update:
    put:
      tags:
        - departmentController
      summary: update department
      operationId: updateDepartment
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: departmentDto
          description: departmentDto
          required: true
          schema:
            $ref: '#/definitions/DepartmentDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DepartmentDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/all_days:
    get:
      tags:
        - employeeController
      summary: get total work days for employee
      operationId: getWorkDaysByEmployee
      produces:
        - '*/*'
      parameters:
        - name: employeeId
          in: query
          description: employeeId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/date/absence:
    get:
      tags:
        - employeeController
      summary: get employees in absence on specified date
      operationId: getEmployeesDateInAbsence
      produces:
        - '*/*'
      parameters:
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/date/at_work:
    get:
      tags:
        - employeeController
      summary: get employees at work in specified date
      operationId: getEmployeesDateAtWork
      produces:
        - '*/*'
      parameters:
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/date/on_sick_leave:
    get:
      tags:
        - employeeController
      summary: get employees on sick leave at specified date
      operationId: getEmployeesDateOnSickLeave
      produces:
        - '*/*'
      parameters:
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/date/on_vacation:
    get:
      tags:
        - employeeController
      summary: get employees on vacation at specified date
      operationId: getEmployeesDateOnVacation
      produces:
        - '*/*'
      parameters:
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/delete:
    delete:
      tags:
        - employeeController
      summary: delete employee
      operationId: deleteEmployee
      produces:
        - '*/*'
      parameters:
        - name: employeeId
          in: query
          description: employeeId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /emp/new:
    post:
      tags:
        - employeeController
      summary: insert new employee
      operationId: insertEmployee
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: employeeDto
          description: employeeDto
          required: true
          schema:
            $ref: '#/definitions/EmployeeDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmployeeDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/now/absence:
    get:
      tags:
        - employeeController
      summary: get employees in absence now
      operationId: getEmployeesNowInAbsence
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/now/at_work:
    get:
      tags:
        - employeeController
      summary: get employees at work now
      operationId: getEmployeesNowAtWork
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/now/on_sick_leave:
    get:
      tags:
        - employeeController
      summary: get employees on sick leave now
      operationId: getEmployeesNowOnSickLeave
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/now/on_vacation:
    get:
      tags:
        - employeeController
      summary: get employees on vacation now
      operationId: getEmployeesNowOnVacation
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /emp/update:
    put:
      tags:
        - employeeController
      summary: update employee
      operationId: updateEmployee
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: employeeDto
          description: employeeDto
          required: true
          schema:
            $ref: '#/definitions/EmployeeDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmployeeDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/emp/{employeeId}':
    get:
      tags:
        - employeeController
      summary: get employee by id
      operationId: getEmployee
      produces:
        - '*/*'
      parameters:
        - name: employeeId
          in: path
          description: employeeId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /position/new:
    post:
      tags:
        - positionController
      summary: insert new position
      operationId: insertPosition
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: positionDto
          description: positionDto
          required: true
          schema:
            $ref: '#/definitions/PositionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PositionDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /position/update:
    put:
      tags:
        - positionController
      summary: update position
      operationId: updatePosition
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: positionDto
          description: positionDto
          required: true
          schema:
            $ref: '#/definitions/PositionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PositionDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/position/{positionId}':
    get:
      tags:
        - positionController
      summary: get position by id
      operationId: getPosition
      produces:
        - '*/*'
      parameters:
        - name: positionId
          in: path
          description: positionId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PositionDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sick/new:
    post:
      tags:
        - sickLeaveController
      summary: insert new sick leave
      operationId: insertSickLeave
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: sickLeaveDto
          description: sickLeaveDto
          required: true
          schema:
            $ref: '#/definitions/SickLeaveDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SickLeaveDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sick/update:
    put:
      tags:
        - sickLeaveController
      summary: update sick leave
      operationId: updateSickLeave
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: sickLeaveDto
          description: sickLeaveDto
          required: true
          schema:
            $ref: '#/definitions/SickLeaveDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SickLeaveDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/sick/{sickId}':
    get:
      tags:
        - sickLeaveController
      summary: get sick leave by id
      operationId: getSickLeave
      produces:
        - '*/*'
      parameters:
        - name: sickId
          in: path
          description: sickId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SickLeaveDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /vacation/employee_last:
    get:
      tags:
        - vacationController
      summary: get last vacation by employee
      operationId: getLastVacationByEmployee
      produces:
        - '*/*'
      parameters:
        - name: employeeId
          in: query
          description: employeeId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /vacation/new:
    post:
      tags:
        - vacationController
      summary: insert new Vacation
      operationId: insertVacation
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: vacationDto
          description: vacationDto
          required: true
          schema:
            $ref: '#/definitions/VacationDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacationDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /vacation/update:
    put:
      tags:
        - vacationController
      summary: update vacation
      operationId: updateVacation
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: vacationDto
          description: vacationDto
          required: true
          schema:
            $ref: '#/definitions/VacationDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacationDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/vacation/{vacationId}':
    get:
      tags:
        - vacationController
      summary: get vacation by id
      operationId: getVacation
      produces:
        - '*/*'
      parameters:
        - name: vacationId
          in: path
          description: vacationId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VacationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  AttendanceSheetDto:
    type: object
    properties:
      employeeId:
        type: integer
        format: int64
      hourAtWork:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      typeOfAttendance:
        type: string
        enum:
          - AT_WORK
          - ABSENCE
          - ON_SICK_LEAVE
          - ON_VACATION
      workDate:
        type: string
        format: date
    title: AttendanceSheetDto
  DepartmentDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: DepartmentDto
  EmployeeDto:
    type: object
    properties:
      dateIn:
        type: string
        format: date
      dateOut:
        type: string
        format: date
      departmentId:
        type: integer
        format: int64
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      positionId:
        type: integer
        format: int64
    title: EmployeeDto
  PositionDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: PositionDto
  SickLeaveDto:
    type: object
    properties:
      dateEnd:
        type: string
        format: date
      dateStart:
        type: string
        format: date
      employeeId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      typeOfSickLeave:
        type: string
        enum:
          - BASIC
          - FAMILY_MEMBER
          - CHILD
    title: SickLeaveDto
  VacationDto:
    type: object
    properties:
      dateEnd:
        type: string
        format: date
      dateStart:
        type: string
        format: date
      employeeId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      typeOfVacation:
        type: string
        enum:
          - ANNUAL_VACATION
          - ADDITIONAL_VACATION
    title: VacationDto